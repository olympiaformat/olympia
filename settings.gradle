/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rootProject.name = 'olympia'

include 'bundled-guava'
include 'core'
include 's3'
include 'spark'

project(':bundled-guava').name = 'olympia-bundled-guava'
project(':core').name = 'olympia-core'
project(':s3').name = 'olympia-s3'
project(':spark').name = 'olympia-spark'

if (System.getProperty("allModules") != null) {
    System.setProperty("sparkVersions", System.getProperty("knownSparkVersions"))
}

List<String> knownSparkVersions = System.getProperty("knownSparkVersions").split(",")
String sparkVersionsString = System.getProperty("sparkVersions") != null ? System.getProperty("sparkVersions") : System.getProperty("defaultSparkVersions")
List<String> sparkVersions = sparkVersionsString != null && !sparkVersionsString.isEmpty() ? sparkVersionsString.split(",") : []

if (!knownSparkVersions.containsAll(sparkVersions)) {
    throw new GradleException("Found unsupported Spark versions: " + (sparkVersions - knownSparkVersions))
}

List<String> knownScalaVersions = System.getProperty("knownScalaVersions").split(",")
String scalaVersion = System.getProperty("scalaVersion") != null ? System.getProperty("scalaVersion") : System.getProperty("defaultScalaVersion")

if (!knownScalaVersions.contains(scalaVersion)) {
    throw new GradleException("Found unsupported Scala version: " + scalaVersion)
}

if (sparkVersions.contains("3.5")) {
    include ":olympia-spark:spark-3.5_${scalaVersion}"
    include ":olympia-spark:spark-extensions-3.5_${scalaVersion}"
    include ":olympia-spark:spark-runtime-3.5_${scalaVersion}"
    project(":olympia-spark:spark-3.5_${scalaVersion}").projectDir = file('spark/v3.5/spark')
    project(":olympia-spark:spark-3.5_${scalaVersion}").name = "olympia-spark-3.5_${scalaVersion}"
    project(":olympia-spark:spark-extensions-3.5_${scalaVersion}").projectDir = file('spark/v3.5/spark-extensions')
    project(":olympia-spark:spark-extensions-3.5_${scalaVersion}").name = "olympia-spark-extensions-3.5_${scalaVersion}"
    project(":olympia-spark:spark-runtime-3.5_${scalaVersion}").projectDir = file('spark/v3.5/spark-runtime')
    project(":olympia-spark:spark-runtime-3.5_${scalaVersion}").name = "olympia-spark-runtime-3.5_${scalaVersion}"
}
